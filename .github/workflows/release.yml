name: Release
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  version:
    name: Set Version from git ref
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - id: version
        run: echo "::set-output name=version::$(sed 's#^refs/tags/\(.*\)#\1#' <<< '${{ github.ref }}')"

  images:
    name: Docker Images
    runs-on: ubuntu-latest
    needs: version
    env:
      VERSION: ${{ needs.version.outputs.version }}
      BUILD_DATE_VAR: 'github.com/flomesh-io/xnet/pkg/version.BuildDate'
      BUILD_VERSION_VAR: 'github.com/flomesh-io/xnet/pkg/version.Version'
      BUILD_GITCOMMIT_VAR: 'github.com/flomesh-io/xnet/pkg/version.GitCommit'
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Login to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.RELEASE_DOCKER_USER }}
          password: ${{ secrets.RELEASE_DOCKER_PASS }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v5.6.1
        with:
          images: ${{ secrets.RELEASE_REGISTRY }}/xnet
          tags: |
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=sha,format=short
          flavor: |
            latest=auto

      - name: Get Build Info
        run: |
          echo "BUILD_DATE=$(date +%Y-%m-%d-%H:%M)" >> $GITHUB_ENV
          echo "GIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Build and Push
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: ./Dockerfile.release
          platforms: linux/amd64,linux/arm64
          push: ${{ (github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch) )) }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}